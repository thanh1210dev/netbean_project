/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import entity.ChieuDaiVot;
import entity.DangMatVot;
import entity.DiemCanBang;
import entity.DoBay;
import entity.DoCang;
import entity.DoCungDua;
import entity.MauSac;
import entity.SanPhamChiTiet;
import entity.TrongLuong;
import java.awt.Color;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.concurrent.atomic.AtomicInteger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import reponsitory.ThuocTinhRepo;
import reponsitory.SanPhamChiTietRepo;
import response.SanPhamChiTietResponse;

/**
 *
 * @author ADMIN
 */
public class SanPhamChiTietDialog extends javax.swing.JDialog {

    /**
     * Creates new form SanPhamChiTietDialog
     */
    SanPhamChiTietRepo chiTietRepo = new SanPhamChiTietRepo();
    ThuocTinhRepo thuocTinhRepo = new ThuocTinhRepo();

    private Integer idsp = 0;

    public SanPhamChiTietDialog(java.awt.Frame parent, boolean modal, Integer idSP, String tenSP) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);

        this.idsp = idSP;
        this.tblProductDetail.setRowHeight(25);
        this.loadDataToTable(chiTietRepo.getProductDetailByIdProduct(idSP));
        cbbProductName.addItem(tenSP);
        lbl.setText("Các sản phẩm chi tiết của: " + tenSP);
        //Load độ căng
        this.loadDataToCombobox(cbbDoCang, thuocTinhRepo.getDoCang());
        //Load trọng lượng
        this.loadDataToCombobox(cbbTrongLuong, thuocTinhRepo.getTrongLuong());
        //Load diem can bang
        this.loadDataToCombobox(cbbDiemCanBang, thuocTinhRepo.getDiemCanBang());
        //Load màu sắc
        this.loadDataToCombobox(cbbMauSac, thuocTinhRepo.getMauSac());
        //Load độ cứng
        this.loadDataToCombobox(cbbDoCung, thuocTinhRepo.getDoCungDua());
        //Load dạng mặt vợt
        this.loadDataToCombobox(cbbDangMatVot, thuocTinhRepo.getDangMatVot());

        //Load chiều dài vợt
        this.loadDataToCombobox(cbbChieuDaiVot, thuocTinhRepo.getChieuDaiVot());
        //Load độ bay
        this.loadDataToCombobox(cbbDoBay, thuocTinhRepo.getDoBay());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProductDetail = new javax.swing.JTable();
        btnXoa1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        lbl = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cbbProductName = new javax.swing.JComboBox<>();
        cbbDoCung = new javax.swing.JComboBox<>();
        cbbDiemCanBang = new javax.swing.JComboBox<>();
        cbbTrongLuong = new javax.swing.JComboBox<>();
        cbbDoCang = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cbbMauSac = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtDonGiaSPCT = new javax.swing.JTextField();
        txtSoLuongSPCT = new javax.swing.JTextField();
        btnThemSPCT = new javax.swing.JButton();
        btnSuaSPCT = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        cbbDangMatVot = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        cbbChieuDaiVot = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cbbDoBay = new javax.swing.JComboBox<>();
        txtDescription = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Danh Sách Sản Phẩm Chi Tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tblProductDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "STT", "ID Sản Phẩm CT", "Mã SP", "Tên Sản Phẩm", "Màu Sắc", "Độ Cứng", "Độ Bay", "Điểm Cân Bằng", "Chiều Dài Vợt", "Dạng Mặt Vợt", "Trọng Lượng", "Độ Căng", "Số Lượng", "Đơn giá", "Trạng Thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProductDetail.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tblProductDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductDetailMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProductDetail);

        btnXoa1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnXoa1.setForeground(new java.awt.Color(204, 51, 0));
        btnXoa1.setText("Ngừng bán");
        btnXoa1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoa1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXoa1)
                .addGap(63, 63, 63))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnXoa1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Form Data"));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        lbl.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lbl.setText("Sản phẩm: ");

        jLabel2.setText("Tên Sản Phẩm");

        jLabel3.setText("Độ Cứng");

        jLabel4.setText("Số Lượng");

        jLabel7.setText("Điểm Cân Bằng");

        jLabel8.setText("Trọng Lượng");

        jLabel9.setText("Độ Căng");

        cbbProductName.setEnabled(false);

        cbbDoCung.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbbDiemCanBang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbbTrongLuong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbbDoCang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel11.setText("Màu Sắc");

        cbbMauSac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Đơn Giá");

        txtDonGiaSPCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDonGiaSPCTActionPerformed(evt);
            }
        });

        btnThemSPCT.setBackground(new java.awt.Color(0, 204, 102));
        btnThemSPCT.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnThemSPCT.setForeground(new java.awt.Color(255, 255, 255));
        btnThemSPCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pro1041/icon/Add.png"))); // NOI18N
        btnThemSPCT.setText("Thêm Mới");
        btnThemSPCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSPCTActionPerformed(evt);
            }
        });

        btnSuaSPCT.setBackground(new java.awt.Color(255, 204, 0));
        btnSuaSPCT.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSuaSPCT.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pro1041/icon/Edit.png"))); // NOI18N
        btnSuaSPCT.setText("Sửa");
        btnSuaSPCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaSPCTActionPerformed(evt);
            }
        });

        jLabel10.setText("Dạng mặt vợt");

        cbbDangMatVot.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel12.setText("Chiều dài vợt");

        cbbChieuDaiVot.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Mô tả");

        jLabel13.setText("Độ bay");

        cbbDoBay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cbbProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDonGiaSPCT, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtSoLuongSPCT)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(cbbChieuDaiVot, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtDescription, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cbbDoBay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(cbbTrongLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(cbbDoCang, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cbbDiemCanBang, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(85, 85, 85)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbbMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(cbbDangMatVot, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(cbbDoCung, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(95, 95, 95)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSuaSPCT)
                            .addComponent(btnThemSPCT)
                            .addComponent(jButton1))))
                .addGap(49, 49, 49))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(296, 296, 296)
                .addComponent(lbl)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnSuaSPCT, btnThemSPCT, jButton1});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(lbl)
                .addGap(12, 12, 12)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(3, 3, 3)
                                .addComponent(cbbProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addGap(10, 10, 10)
                                .addComponent(txtSoLuongSPCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbbChieuDaiVot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbbDoBay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbbTrongLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel6)
                                .addGap(10, 10, 10)
                                .addComponent(txtDonGiaSPCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbbDiemCanBang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbbMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jLabel8)
                                .addGap(4, 4, 4)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbbDoCung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSuaSPCT)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbbDoCang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(4, 4, 4)
                                    .addComponent(cbbDangMatVot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(12, 12, 12)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnThemSPCT))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10)
                        .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblProductDetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductDetailMouseClicked

        this.showDataToForm();

    }//GEN-LAST:event_tblProductDetailMouseClicked

    private void showDataToForm() {
        Integer idSPCT = getSPCTID();
//        SanPhamChiTietResponse sanPhamChiTietResponse = chiTietRepo.getProductDetailResponseById(idSPCT);
        SanPhamChiTiet spct = chiTietRepo.getProductDetailyId(idSPCT);

        if (spct.isTrangThai()) {
            btnXoa1.setText("Hoạt động");
            btnXoa1.setForeground(Color.GREEN);
            btnXoa1.setIcon(null);
        } else {
            btnXoa1.setText("Ngừng bán");
            btnXoa1.setForeground(Color.RED);
            btnXoa1.setIcon(null);
        }

        txtSoLuongSPCT.setText(spct.getSoLuong() + "");
        txtDescription.setText(spct.getMoTa());
        txtDonGiaSPCT.setText(spct.getDonGia() + "");

        showDataToCbb(thuocTinhRepo.getChieuDaiVot(), cbbChieuDaiVot, spct);
        showDataToCbb(thuocTinhRepo.getDoBay(), cbbDoBay, spct);
        showDataToCbb(thuocTinhRepo.getTrongLuong(), cbbTrongLuong, spct);
        showDataToCbb(thuocTinhRepo.getDiemCanBang(), cbbDiemCanBang, spct);
        showDataToCbb(thuocTinhRepo.getDangMatVot(), cbbDangMatVot, spct);
        showDataToCbb(thuocTinhRepo.getDoCang(), cbbDoCang, spct);
        showDataToCbb(thuocTinhRepo.getDoCungDua(), cbbDoCung, spct);
        showDataToCbb(thuocTinhRepo.getMauSac(), cbbMauSac, spct);
    }

    void showDataToCbb(List<?> listObj, JComboBox cbb, SanPhamChiTiet spct) {
        for (var obj : listObj) {

            if (obj instanceof ChieuDaiVot chieuDaiVot) {
                if (spct.getMaCdVot() == chieuDaiVot.getId()) {
                    cbb.setSelectedItem(obj);
                }
            }

            if (obj instanceof DoBay doBay) {
                if (spct.getMaDoBay() == doBay.getId()) {
                    cbb.setSelectedItem(obj);
                }
            }

            if (obj instanceof DoCang doCang) {
                if (spct.getMaDoCang() == doCang.getId()) {
                    cbb.setSelectedItem(obj);
                }
            }
            if (obj instanceof TrongLuong trongLuong) {
                if (spct.getMaTrongLuong() == trongLuong.getId()) {
                    cbb.setSelectedItem(obj);
                }
            }
            if (obj instanceof DiemCanBang diemCanBang) {
                if (spct.getMaDiemCanBang() == diemCanBang.getId()) {
                    cbb.setSelectedItem(obj);
                }
            }
            if (obj instanceof DangMatVot dmv) {
                if (spct.getMaDangMatVot() == dmv.getId()) {
                    cbb.setSelectedItem(obj);
                }
            }
            if (obj instanceof DoCungDua cung) {
                if (spct.getMaDoCungDua() == cung.getId()) {
                    cbb.setSelectedItem(obj);
                }
            }
            if (obj instanceof MauSac mauSac) {
                if (spct.getMaMau() == mauSac.getId()) {
                    cbb.setSelectedItem(obj);
                }
            }
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtDonGiaSPCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDonGiaSPCTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonGiaSPCTActionPerformed

    private void btnThemSPCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSPCTActionPerformed
        // TODO add your handling code here:
        SanPhamChiTiet spct = getFormAddNewProductDetail();
//        Integer idSPCT = getSPCTID();
//        SanPhamChiTiet sanPhamChiTiet = chiTietRepo.getProductDetailyId(idSPCT);
        if (spct != null) {
//            if (checkLoopProductDetail(sanPhamChiTiet)) {
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm 1 sản phẩm chi tiết mới?", "Thêm sản phẩm chi tiết mới", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                System.out.println(getFormAddNewProductDetail());
                chiTietRepo.creatNewProductDetail(spct);
                loadDataToTable(chiTietRepo.getProductDetailByIdProduct(this.idsp));
            }
//            }

        }

    }//GEN-LAST:event_btnThemSPCTActionPerformed

    private Integer getSPCTID() {
        if (tblProductDetail.getSelectedRow() >= 0) {
            Integer idSPCT = Integer.valueOf(tblProductDetail.getValueAt(tblProductDetail.getSelectedRow(), 1).toString());
            return idSPCT;
        } else {
            JOptionPane.showMessageDialog(this, "Chọn sản phẩm chi tiết trên bảng để lấy id");
            return null;
        }

    }

    private boolean checkLoopProductDetail(SanPhamChiTiet spct) {
        SanPhamChiTiet spct2 = getFormAddNewProductDetail();
        if (spct2 != null) {
            if (spct.getId() == spct2.getId()) {
                return true;
            }
            if (spct.getIdSp() == spct2.getIdSp()
                    && spct.getMaCdVot() == spct2.getMaCdVot()
                    && spct.getMaDangMatVot() == spct2.getMaDangMatVot()
                    && spct.getMaDiemCanBang() == spct2.getMaDiemCanBang()
                    && spct.getMaDoBay() == spct2.getMaDoBay()
                    && spct.getMaDoCang() == spct2.getMaDoCang()
                    && spct.getMaDoCungDua() == spct2.getMaDoCungDua()
                    && spct.getMaMau() == spct2.getMaMau()
                    && spct.getMaTrongLuong() == spct2.getMaTrongLuong()) {
                JOptionPane.showMessageDialog(this, "Sản phẩm chi tiết này đã tồn tại");
                return false;
            }
        }
        return true;

    }

    private boolean checkLoopProductDetailUpdate(SanPhamChiTiet spct) {
        SanPhamChiTiet spct2 = getFormAddNewProductDetail();
        if (spct2 != null) {
            if (spct.getId() == getSPCTID()) {
                return true;
            }
            if (spct.getIdSp() == spct2.getIdSp()
                    && spct.getMaCdVot() == spct2.getMaCdVot()
                    && spct.getMaDangMatVot() == spct2.getMaDangMatVot()
                    && spct.getMaDiemCanBang() == spct2.getMaDiemCanBang()
                    && spct.getMaDoBay() == spct2.getMaDoBay()
                    && spct.getMaDoCang() == spct2.getMaDoCang()
                    && spct.getMaDoCungDua() == spct2.getMaDoCungDua()
                    && spct.getMaMau() == spct2.getMaMau()
                    && spct.getMaTrongLuong() == spct2.getMaTrongLuong()) {
                JOptionPane.showMessageDialog(this, "Sản phẩm chi tiết này đã tồn tại");
                return false;
            }
        }
        return true;

    }


    private void btnXoa1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoa1ActionPerformed
        int selectedRow = tblProductDetail.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Chọn sản phẩm chi tiết cần thay đổi trạng thái!");
            return;
        }
        if (getFormAddNewProductDetail() != null) {
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn thay đổi trạng thái sản phẩm chi tiết này??", "Xác nhận thay đổi trạng thái", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                if (btnXoa1.getText().equalsIgnoreCase("Ngừng bán")) {
                    chiTietRepo.updateStatus(getSPCTID(), true);
                    this.loadDataToTable(chiTietRepo.getProductDetailByIdProduct(this.idsp));
                } else {
                    chiTietRepo.updateStatus(getSPCTID(), false);
                    this.loadDataToTable(chiTietRepo.getProductDetailByIdProduct(this.idsp));
                }

            }
        }

    }//GEN-LAST:event_btnXoa1ActionPerformed

    private void btnSuaSPCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaSPCTActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProductDetail.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Chọn sản phẩm chi tiết cần sửa!");
            return;
        }
        if (getFormAddNewProductDetail() != null) {
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn sửa spct?", "Sửa", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                SanPhamChiTiet spct = getFormAddNewProductDetail();
                Integer idSPCT = getSPCTID();
                SanPhamChiTiet sanPhamChiTiet = chiTietRepo.getProductDetailyId(idSPCT);
                if (spct != null) {
                    spct.setId(getSPCTID());
                    if (checkLoopProductDetailUpdate(sanPhamChiTiet)) {
                        System.out.println(getFormAddNewProductDetail());
                        chiTietRepo.updateProductDetail(spct);
                        loadDataToTable(chiTietRepo.getProductDetailByIdProduct(this.idsp));
                    }
                }
            }
        }


    }//GEN-LAST:event_btnSuaSPCTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SanPhamChiTietDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SanPhamChiTietDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SanPhamChiTietDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SanPhamChiTietDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SanPhamChiTietDialog dialog = new SanPhamChiTietDialog(new javax.swing.JFrame(), true, 1, "Vợt test");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSuaSPCT;
    private javax.swing.JButton btnThemSPCT;
    private javax.swing.JButton btnXoa1;
    private javax.swing.JComboBox<String> cbbChieuDaiVot;
    private javax.swing.JComboBox<String> cbbDangMatVot;
    private javax.swing.JComboBox<String> cbbDiemCanBang;
    private javax.swing.JComboBox<String> cbbDoBay;
    private javax.swing.JComboBox<String> cbbDoCang;
    private javax.swing.JComboBox<String> cbbDoCung;
    private javax.swing.JComboBox<String> cbbMauSac;
    private javax.swing.JComboBox<String> cbbProductName;
    private javax.swing.JComboBox<String> cbbTrongLuong;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbl;
    private javax.swing.JTable tblProductDetail;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtDonGiaSPCT;
    private javax.swing.JTextField txtSoLuongSPCT;
    // End of variables declaration//GEN-END:variables

    private void loadDataToTable(ArrayList<SanPhamChiTietResponse> list) {
        DefaultTableModel model = (DefaultTableModel) tblProductDetail.getModel();
        model.setRowCount(0);
        AtomicInteger index = new AtomicInteger(1);
        list.forEach(spct -> {
            model.addRow(new Object[]{
                index.getAndIncrement(), spct.getId(), spct.getMaSP(), spct.getTenSP(), spct.getMauSac(), spct.getDoCungDua(), spct.getDoBay(),
                spct.getDiemCanBang(), spct.getChieuDaiVot(), spct.getDangMatVot(), spct.getTrongLuong(), spct.getDoCang(), spct.getSoLuong(), formatCash(spct.getDonGia()), spct.isTrangThai() ? "Ngừng bán" : "Đang bán"
            });
        }
        );
    }

    private void loadDataToCombobox(JComboBox cbb, List<?> list) {
        DefaultComboBoxModel cmodel = (DefaultComboBoxModel) cbb.getModel();
        cmodel.removeAllElements();
        for (var obj : list) {
            cmodel.addElement(obj);
        }
    }

    private SanPhamChiTiet getFormAddNewProductDetail() {
        int idNhaCungCap = 1;
        Integer soLuong;
        try {
            soLuong = Integer.valueOf(txtSoLuongSPCT.getText());
            if (soLuong < 1) {
                JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0");
                return null;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Số lượng phải là số");
            return null;
        }

        Float donGia;
        try {
            donGia = Float.valueOf(txtDonGiaSPCT.getText());
            if (donGia < 1) {
                JOptionPane.showMessageDialog(this, "Đơn giá phải lớn hơn 0");
                return null;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Đơn giá phải là số");
            return null;
        }

        MauSac mauSac = (MauSac) cbbMauSac.getSelectedItem();
        if (mauSac == null) {
            JOptionPane.showMessageDialog(this, "Chưa có màu sắc!");
            return null;
        }

        DoCungDua cungDua = (DoCungDua) cbbDoCung.getSelectedItem();
        if (cungDua == null) {
            JOptionPane.showMessageDialog(this, "Chưa có độ cứng đũa!");
            return null;
        }

        DoCang doCang = (DoCang) cbbDoCang.getSelectedItem();
        if (doCang == null) {
            JOptionPane.showMessageDialog(this, "Chưa có độ căng");
            return null;
        }

        ChieuDaiVot chieuDaiVot = (ChieuDaiVot) cbbChieuDaiVot.getSelectedItem();
        if (chieuDaiVot == null) {
            JOptionPane.showMessageDialog(this, "Chưa có chiều dài vợt");
            return null;
        }

        DiemCanBang dcb = (DiemCanBang) cbbDiemCanBang.getSelectedItem();
        if (dcb == null) {
            JOptionPane.showMessageDialog(this, "Chưa có điểm cân bằng");
            return null;
        }

        TrongLuong trongLuong = (TrongLuong) cbbTrongLuong.getSelectedItem();
        if (trongLuong == null) {
            JOptionPane.showMessageDialog(this, "Chưa có trọng lượng");
            return null;
        }

        DoBay doBay = (DoBay) cbbDoBay.getSelectedItem();
        if (doBay == null) {
            JOptionPane.showMessageDialog(this, "Chưa có độ bay");
            return null;
        }

        DangMatVot dangMatVot = (DangMatVot) cbbDangMatVot.getSelectedItem();
        if (dangMatVot == null) {
            JOptionPane.showMessageDialog(this, "Chưa có dạng mặt vợt");
            return null;
        }

        if (txtDescription.getText().length() > 50) {
            JOptionPane.showMessageDialog(this, "Mô tả không được quá 50 ký tự");
            return null;
        }

        return new SanPhamChiTiet(
                this.idsp,
                idNhaCungCap,
                mauSac.getId(),
                cungDua.getId(),
                doCang.getId(),
                soLuong,
                donGia,
                txtDescription.getText(),
                new Date(),
                chieuDaiVot.getId(),
                dcb.getId(),
                trongLuong.getId(),
                doBay.getId(),
                dangMatVot.getId(),
                false
        );
    }
    //Hàm này có tác dụng format lại tiền

    private String formatCash(Double price) {
        try {
            NumberFormat currencyFormatter = NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));
            String formated = currencyFormatter.format(price);
            return formated;
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Có lỗi trong quá trình format");
            return "";
        }

    }

    //Hàm này có tác dụng format lại tiền
    private String formatCash(float price) {
        try {
            NumberFormat currencyFormatter = NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));
            String formated = currencyFormatter.format(price);
            return formated;
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Có lỗi trong quá trình format");
            return "";
        }

    }

}
